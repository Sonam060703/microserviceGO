

services:
  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    depends_on:
      account_db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://akhil:123456@account_db/akhil?sslmode=disable
    restart: on-failure

  catalog:
    build:
      context: .
      dockerfile: ./catalog/app.dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      DATABASE_URL: http://elasticsearch:9200
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    depends_on:
      order_db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://akhil:123456@order_db/akhil?sslmode=disable
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
    restart: on-failure

  graphql:
    build:
      context: .
      dockerfile: ./graphql/app.dockerfile
    ports:
      - 8000:8080
    depends_on:
      - account
      - catalog
    environment:
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
      ORDER_SERVICE_URL: order:8080
    restart: on-failure

  account_db:
    build:
      context: ./account
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: akhil
      POSTGRES_USER: akhil
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhil"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

  order_db:
    build:
      context: ./order
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: akhil
      POSTGRES_USER: akhil
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhil"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


volumes:
  es_data: